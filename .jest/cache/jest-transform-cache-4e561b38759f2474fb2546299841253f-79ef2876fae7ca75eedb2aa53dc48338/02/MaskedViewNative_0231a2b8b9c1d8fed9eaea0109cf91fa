1a9680ffa4b284a0be14fad37eaf2352
"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MaskedView = MaskedView;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var RNCMaskedView;
try {
  RNCMaskedView = require('@react-native-masked-view/masked-view').default;
} catch (e) {}
var isMaskedViewAvailable = _reactNative.UIManager.getViewManagerConfig('RNCMaskedView') != null;
function MaskedView(_ref) {
  var children = _ref.children,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  if (isMaskedViewAvailable && RNCMaskedView) {
    return (0, _jsxRuntime.jsx)(RNCMaskedView, Object.assign({}, rest, {
      children: children
    }));
  }
  return children;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiX2V4Y2x1ZGVkIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsIl90IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJSTkNNYXNrZWRWaWV3IiwiaXNNYXNrZWRWaWV3QXZhaWxhYmxlIiwiVUlNYW5hZ2VyIiwiZ2V0Vmlld01hbmFnZXJDb25maWciLCJNYXNrZWRWaWV3IiwiX3JlZiIsImNoaWxkcmVuIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfanN4IiwiYXNzaWduIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL01hc2tlZFZpZXdOYXRpdmUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQXlDLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUFBLElBQUFHLFNBQUE7QUFBQSxTQUFBSix3QkFBQUssQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQVAsdUJBQUEsWUFBQUEsd0JBQUFLLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FBQSxHQUFBVyxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbkIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFNLEVBQUEsRUFBQVAsQ0FBQSxJQUFBQyxDQUFBLENBQUFNLEVBQUEsSUFBQWQsQ0FBQSxDQUFBYyxFQUFBLFdBQUFOLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBU3pDLElBQUltQixhQUF5QztBQUU3QyxJQUFJO0VBR0ZBLGFBQWEsR0FBR3hCLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDYyxPQUFPO0FBQzFFLENBQUMsQ0FBQyxPQUFPVixDQUFDLEVBQUUsQ0FDVjtBQUdGLElBQU1xQixxQkFBcUIsR0FDekJDLHNCQUFTLENBQUNDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxJQUFJLElBQUk7QUFFbEQsU0FBU0MsVUFBVUEsQ0FBQUMsSUFBQSxFQUErQjtFQUFBLElBQTVCQyxRQUFRLEdBQUFELElBQUEsQ0FBUkMsUUFBUTtJQUFLQyxJQUFBLE9BQUFDLHlCQUFBLENBQUFsQixPQUFBLEVBQUFlLElBQUEsRUFBQTFCLFNBQUE7RUFDeEMsSUFBSXNCLHFCQUFxQixJQUFJRCxhQUFhLEVBQUU7SUFDMUMsT0FBTyxJQUFBUyxlQUFBLEVBQUNULGFBQWEsRUFBQUgsTUFBQSxDQUFBYSxNQUFBLEtBQUtILElBQUk7TUFBQUQsUUFBQSxFQUFHQTtJQUFBLEVBQXdCLENBQUM7RUFDNUQ7RUFFQSxPQUFPQSxRQUFRO0FBQ2pCIiwiaWdub3JlTGlzdCI6W119