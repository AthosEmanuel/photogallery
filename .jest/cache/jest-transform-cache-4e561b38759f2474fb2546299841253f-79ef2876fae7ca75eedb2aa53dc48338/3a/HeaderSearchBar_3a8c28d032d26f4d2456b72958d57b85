f2616af1dcaf472358bd07bbe0c1ece2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HeaderSearchBar = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _native = require("@react-navigation/native");
var _color = _interopRequireDefault(require("color"));
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _clearIcon = _interopRequireDefault(require("../assets/clear-icon.png"));
var _closeIcon = _interopRequireDefault(require("../assets/close-icon.png"));
var _searchIcon = _interopRequireDefault(require("../assets/search-icon.png"));
var _PlatformPressable = require("../PlatformPressable.js");
var _Text = require("../Text.js");
var _HeaderButton = require("./HeaderButton.js");
var _HeaderIcon = require("./HeaderIcon.js");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["visible", "inputType", "autoFocus", "placeholder", "cancelButtonText", "enterKeyHint", "onChangeText", "onClose", "tintColor", "style"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var INPUT_TYPE_TO_MODE = {
  text: 'text',
  number: 'numeric',
  phone: 'tel',
  email: 'email'
};
var useNativeDriver = _reactNative.Platform.OS !== 'web';
function HeaderSearchBarInternal(_ref, ref) {
  var visible = _ref.visible,
    inputType = _ref.inputType,
    _ref$autoFocus = _ref.autoFocus,
    autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? 'Search' : _ref$placeholder,
    _ref$cancelButtonText = _ref.cancelButtonText,
    cancelButtonText = _ref$cancelButtonText === void 0 ? 'Cancel' : _ref$cancelButtonText,
    _ref$enterKeyHint = _ref.enterKeyHint,
    enterKeyHint = _ref$enterKeyHint === void 0 ? 'search' : _ref$enterKeyHint,
    onChangeText = _ref.onChangeText,
    onClose = _ref.onClose,
    tintColor = _ref.tintColor,
    style = _ref.style,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var navigation = (0, _native.useNavigation)();
  var _useTheme = (0, _native.useTheme)(),
    dark = _useTheme.dark,
    colors = _useTheme.colors,
    fonts = _useTheme.fonts;
  var _React$useState = React.useState(''),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    value = _React$useState2[0],
    setValue = _React$useState2[1];
  var _React$useState3 = React.useState(visible),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    rendered = _React$useState4[0],
    setRendered = _React$useState4[1];
  var _React$useState5 = React.useState(function () {
      return new _reactNative.Animated.Value(visible ? 1 : 0);
    }),
    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 1),
    visibleAnim = _React$useState6[0];
  var _React$useState7 = React.useState(function () {
      return new _reactNative.Animated.Value(0);
    }),
    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 1),
    clearVisibleAnim = _React$useState8[0];
  var visibleValueRef = React.useRef(visible);
  var clearVisibleValueRef = React.useRef(false);
  var inputRef = React.useRef(null);
  React.useEffect(function () {
    if (visible === visibleValueRef.current) {
      return;
    }
    _reactNative.Animated.timing(visibleAnim, {
      toValue: visible ? 1 : 0,
      duration: 100,
      useNativeDriver: useNativeDriver
    }).start(function (_ref2) {
      var finished = _ref2.finished;
      if (finished) {
        setRendered(visible);
        visibleValueRef.current = visible;
      }
    });
    return function () {
      visibleAnim.stopAnimation();
    };
  }, [visible, visibleAnim]);
  var hasText = value !== '';
  React.useEffect(function () {
    if (clearVisibleValueRef.current === hasText) {
      return;
    }
    _reactNative.Animated.timing(clearVisibleAnim, {
      toValue: hasText ? 1 : 0,
      duration: 100,
      useNativeDriver: useNativeDriver
    }).start(function (_ref3) {
      var finished = _ref3.finished;
      if (finished) {
        clearVisibleValueRef.current = hasText;
      }
    });
  }, [clearVisibleAnim, hasText]);
  var clearText = React.useCallback(function () {
    var _inputRef$current, _inputRef$current2;
    (_inputRef$current = inputRef.current) == null || _inputRef$current.clear();
    (_inputRef$current2 = inputRef.current) == null || _inputRef$current2.focus();
    setValue('');
  }, []);
  var onClear = React.useCallback(function () {
    clearText();
    onChangeText == null || onChangeText({
      nativeEvent: {
        text: ''
      }
    });
  }, [clearText, onChangeText]);
  var cancelSearch = React.useCallback(function () {
    onClear();
    onClose();
  }, [onClear, onClose]);
  React.useEffect(function () {
    return navigation == null ? void 0 : navigation.addListener('blur', cancelSearch);
  }, [cancelSearch, navigation]);
  React.useImperativeHandle(ref, function () {
    return {
      focus: function focus() {
        var _inputRef$current3;
        (_inputRef$current3 = inputRef.current) == null || _inputRef$current3.focus();
      },
      blur: function blur() {
        var _inputRef$current4;
        (_inputRef$current4 = inputRef.current) == null || _inputRef$current4.blur();
      },
      setText: function setText(text) {
        var _inputRef$current5;
        (_inputRef$current5 = inputRef.current) == null || _inputRef$current5.setNativeProps({
          text: text
        });
        setValue(text);
      },
      clearText: clearText,
      cancelSearch: cancelSearch
    };
  }, [cancelSearch, clearText]);
  if (!visible && !rendered) {
    return null;
  }
  var textColor = tintColor != null ? tintColor : colors.text;
  return (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {
    pointerEvents: visible ? 'auto' : 'none',
    "aria-live": "polite",
    "aria-hidden": !visible,
    style: [styles.container, {
      opacity: visibleAnim
    }, style],
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.searchbarContainer,
      children: [(0, _jsxRuntime.jsx)(_HeaderIcon.HeaderIcon, {
        source: _searchIcon.default,
        tintColor: textColor,
        style: styles.inputSearchIcon
      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, Object.assign({}, rest, {
        ref: inputRef,
        onChange: onChangeText,
        onChangeText: setValue,
        autoFocus: autoFocus,
        inputMode: INPUT_TYPE_TO_MODE[inputType != null ? inputType : 'text'],
        enterKeyHint: enterKeyHint,
        placeholder: placeholder,
        placeholderTextColor: (0, _color.default)(textColor).alpha(0.5).string(),
        cursorColor: colors.primary,
        selectionHandleColor: colors.primary,
        selectionColor: (0, _color.default)(colors.primary).alpha(0.3).string(),
        style: [fonts.regular, styles.searchbar, {
          backgroundColor: _reactNative.Platform.select({
            ios: dark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',
            default: 'transparent'
          }),
          color: textColor,
          borderBottomColor: (0, _color.default)(textColor).alpha(0.2).string()
        }]
      })), _reactNative.Platform.OS === 'ios' ? (0, _jsxRuntime.jsx)(_PlatformPressable.PlatformPressable, {
        onPress: onClear,
        style: [{
          opacity: clearVisibleAnim,
          transform: [{
            scale: clearVisibleAnim
          }]
        }, styles.clearButton],
        children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
          source: _clearIcon.default,
          resizeMode: "contain",
          tintColor: textColor,
          style: styles.clearIcon
        })
      }) : null]
    }), _reactNative.Platform.OS !== 'ios' ? (0, _jsxRuntime.jsx)(_HeaderButton.HeaderButton, {
      onPress: function onPress() {
        if (value) {
          onClear();
        } else {
          onClose();
        }
      },
      style: styles.closeButton,
      children: (0, _jsxRuntime.jsx)(_HeaderIcon.HeaderIcon, {
        source: _closeIcon.default,
        tintColor: textColor
      })
    }) : null, _reactNative.Platform.OS === 'ios' ? (0, _jsxRuntime.jsx)(_PlatformPressable.PlatformPressable, {
      onPress: cancelSearch,
      style: styles.cancelButton,
      children: (0, _jsxRuntime.jsx)(_Text.Text, {
        style: [fonts.regular, {
          color: tintColor != null ? tintColor : colors.primary
        }, styles.cancelText],
        children: cancelButtonText
      })
    }) : null]
  });
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'stretch'
  },
  inputSearchIcon: Object.assign({
    position: 'absolute',
    opacity: 0.5,
    left: _reactNative.Platform.select({
      ios: 16,
      default: 4
    }),
    top: _reactNative.Platform.select({
      ios: -1,
      default: 17
    })
  }, _reactNative.Platform.select({
    ios: {
      height: 18,
      width: 18
    },
    default: {}
  })),
  closeButton: {
    position: 'absolute',
    opacity: 0.5,
    right: _reactNative.Platform.select({
      ios: 0,
      default: 8
    }),
    top: _reactNative.Platform.select({
      ios: -2,
      default: 17
    })
  },
  clearButton: {
    position: 'absolute',
    right: 0,
    top: -7,
    bottom: 0,
    justifyContent: 'center',
    padding: 8
  },
  clearIcon: {
    height: 16,
    width: 16,
    opacity: 0.5
  },
  cancelButton: {
    alignSelf: 'center',
    top: -4
  },
  cancelText: {
    fontSize: 17,
    marginHorizontal: 12
  },
  searchbarContainer: {
    flex: 1
  },
  searchbar: _reactNative.Platform.select({
    ios: {
      flex: 1,
      fontSize: 17,
      paddingHorizontal: 32,
      marginLeft: 16,
      marginTop: -1,
      marginBottom: 4,
      borderRadius: 8
    },
    default: {
      flex: 1,
      fontSize: 18,
      paddingHorizontal: 36,
      marginRight: 8,
      marginTop: 8,
      marginBottom: 8,
      borderBottomWidth: 1
    }
  })
});
var HeaderSearchBar = exports.HeaderSearchBar = React.forwardRef(HeaderSearchBarInternal);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,