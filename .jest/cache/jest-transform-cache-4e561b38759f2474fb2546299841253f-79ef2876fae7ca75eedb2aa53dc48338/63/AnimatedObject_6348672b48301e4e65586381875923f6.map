{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","isPlainObject","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_AnimatedNode","_AnimatedWithChildren2","_react","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","MAX_DEPTH","getPrototypeOf","isPrototypeOf","isValidElement","flatAnimatedNodes","nodes","arguments","length","undefined","depth","AnimatedNode","push","Array","isArray","ii","element","keys","key","mapAnimatedNodes","fn","map","result","_nodes","AnimatedObject","_AnimatedWithChildren","config","_this","writable","_value","__getValue","node","__getValueWithStaticObject","staticObject","index","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__makeNative","platformConfig","__getNativeConfig","type","nodeTag","__getNativeTag","debugID","__getDebugID","from","AnimatedWithChildren"],"sources":["AnimatedObject.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type {AnimatedNodeConfig} from './AnimatedNode';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport {isValidElement} from 'react';\n\nconst MAX_DEPTH = 5;\n\nexport function isPlainObject(\n  value: mixed,\n  /* $FlowIssue[incompatible-type-guard] - Flow does not know that the prototype\n     and ReactElement checks preserve the type refinement of `value`. */\n): value is $ReadOnly<{[string]: mixed}> {\n  return (\n    // $FlowFixMe[incompatible-type-guard]\n    value !== null &&\n    typeof value === 'object' &&\n    Object.getPrototypeOf(value).isPrototypeOf(Object) &&\n    !isValidElement(value)\n  );\n}\n\nfunction flatAnimatedNodes(\n  value: mixed,\n  nodes: Array<AnimatedNode> = [],\n  depth: number = 0,\n): Array<AnimatedNode> {\n  if (depth >= MAX_DEPTH) {\n    return nodes;\n  }\n  if (value instanceof AnimatedNode) {\n    nodes.push(value);\n  } else if (Array.isArray(value)) {\n    for (let ii = 0, length = value.length; ii < length; ii++) {\n      const element = value[ii];\n      flatAnimatedNodes(element, nodes, depth + 1);\n    }\n  } else if (isPlainObject(value)) {\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      flatAnimatedNodes(value[key], nodes, depth + 1);\n    }\n  }\n  return nodes;\n}\n\n// Returns a copy of value with a transformation fn applied to any AnimatedNodes\nfunction mapAnimatedNodes(value: any, fn: any => any, depth: number = 0): any {\n  if (depth >= MAX_DEPTH) {\n    return value;\n  }\n\n  if (value instanceof AnimatedNode) {\n    return fn(value);\n  } else if (Array.isArray(value)) {\n    return value.map(element => mapAnimatedNodes(element, fn, depth + 1));\n  } else if (isPlainObject(value)) {\n    const result: {[string]: any} = {};\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      result[key] = mapAnimatedNodes(value[key], fn, depth + 1);\n    }\n    return result;\n  } else {\n    return value;\n  }\n}\n\nexport default class AnimatedObject extends AnimatedWithChildren {\n  #nodes: $ReadOnlyArray<AnimatedNode>;\n  _value: mixed;\n\n  /**\n   * Creates an `AnimatedObject` if `value` contains `AnimatedNode` instances.\n   * Otherwise, returns `null`.\n   */\n  static from(value: mixed): ?AnimatedObject {\n    const nodes = flatAnimatedNodes(value);\n    if (nodes.length === 0) {\n      return null;\n    }\n    return new AnimatedObject(nodes, value);\n  }\n\n  /**\n   * Should only be called by `AnimatedObject.from`.\n   */\n  constructor(\n    nodes: $ReadOnlyArray<AnimatedNode>,\n    value: mixed,\n    config?: ?AnimatedNodeConfig,\n  ) {\n    super(config);\n    this.#nodes = nodes;\n    this._value = value;\n  }\n\n  __getValue(): any {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getValue();\n    });\n  }\n\n  __getValueWithStaticObject(staticObject: mixed): any {\n    const nodes = this.#nodes;\n    let index = 0;\n    // NOTE: We can depend on `this._value` and `staticObject` sharing a\n    // structure because of `useAnimatedPropsMemo`.\n    return mapAnimatedNodes(staticObject, () => nodes[index++].__getValue());\n  }\n\n  __getAnimatedValue(): any {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getAnimatedValue();\n    });\n  }\n\n  __attach(): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n    super.__attach();\n  }\n\n  __detach(): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig): void {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'object',\n      value: mapAnimatedNodes(this._value, node => {\n        return {nodeTag: node.__getNativeTag()};\n      }),\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}