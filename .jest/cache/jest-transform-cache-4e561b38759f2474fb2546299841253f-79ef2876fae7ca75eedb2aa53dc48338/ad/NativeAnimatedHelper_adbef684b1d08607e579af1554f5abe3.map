{"version":3,"names":["_NativeAnimatedModule","_interopRequireDefault","require","_NativeAnimatedTurboModule","_NativeEventEmitter","_RCTDeviceEventEmitter","_Platform","ReactNativeFeatureFlags","_interopRequireWildcard","_invariant","_nullthrows","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","NativeAnimatedModule","NativeAnimatedNonTurboModule","NativeAnimatedTurboModule","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","waitingForQueuedOperations","Set","queueOperations","queue","singleOpQueue","isSingleOpBatching","Platform","OS","queueAndExecuteBatchedOperations","animatedShouldUseSingleOp","flushQueueImmediate","eventListenerGetValueCallbacks","eventListenerAnimationFinishedCallbacks","globalEventEmitterGetValueListener","globalEventEmitterAnimationFinishedListener","shouldSignalBatch","animatedShouldSignalBatch","cxxNativeAnimatedEnabled","createNativeOperations","methodNames","nativeOperations","_loop","methodName","ii","operationID","_len","arguments","length","args","Array","_key","push","apply","concat","clearImmediate","setImmediate","API","flushQueue","_loop2","_len2","_key2","method","nullthrows","NativeOperations","getValue","tag","saveValueCallback","setWaitingForIdentifier","id","add","animatedShouldDebounceQueueFlush","unsetWaitingForIdentifier","delete","size","disableQueue","invariant","prevImmediate","ensureGlobalEventEmitterListeners","startOperationBatch","q","l","finishOperationBatch","createAnimatedNode","config","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","parentTag","childTag","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","RCTDeviceEventEmitter","addListener","params","callback","animations","isArray","animation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","_warnedMissingNativeAnimated","shouldUseNativeDriver","useNativeDriver","console","warn","process","env","NODE_ENV","transformDataType","endsWith","degrees","parseFloat","Math","PI","_default","exports","NativeEventEmitter"],"sources":["NativeAnimatedHelper.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {EventConfig} from '../../../Libraries/Animated/AnimatedEvent';\nimport type {\n  AnimationConfig,\n  EndCallback,\n} from '../../../Libraries/Animated/animations/Animation';\nimport type {\n  AnimatedNodeConfig,\n  EventMapping,\n} from '../../../Libraries/Animated/NativeAnimatedModule';\nimport type {EventSubscription} from '../../../Libraries/vendor/emitter/EventEmitter';\n\nimport NativeAnimatedNonTurboModule from '../../../Libraries/Animated/NativeAnimatedModule';\nimport NativeAnimatedTurboModule from '../../../Libraries/Animated/NativeAnimatedTurboModule';\nimport NativeEventEmitter from '../../../Libraries/EventEmitter/NativeEventEmitter';\nimport RCTDeviceEventEmitter from '../../../Libraries/EventEmitter/RCTDeviceEventEmitter';\nimport Platform from '../../../Libraries/Utilities/Platform';\nimport * as ReactNativeFeatureFlags from '../featureflags/ReactNativeFeatureFlags';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\n\n// TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\nconst NativeAnimatedModule: typeof NativeAnimatedTurboModule =\n  NativeAnimatedNonTurboModule ?? NativeAnimatedTurboModule;\n\nlet __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\nlet __nativeAnimationIdCount = 1; /* used for started animations */\n\nlet nativeEventEmitter;\n\nlet waitingForQueuedOperations = new Set<string>();\nlet queueOperations = false;\nlet queue: Array<() => void> = [];\nlet singleOpQueue: Array<mixed> = [];\n\nconst isSingleOpBatching =\n  Platform.OS === 'android' &&\n  NativeAnimatedModule?.queueAndExecuteBatchedOperations != null &&\n  ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nlet flushQueueImmediate = null;\n\nconst eventListenerGetValueCallbacks: {\n  [number]: (value: number) => void,\n} = {};\nconst eventListenerAnimationFinishedCallbacks: {\n  [number]: EndCallback,\n} = {};\nlet globalEventEmitterGetValueListener: ?EventSubscription = null;\nlet globalEventEmitterAnimationFinishedListener: ?EventSubscription = null;\n\nconst shouldSignalBatch: boolean =\n  ReactNativeFeatureFlags.animatedShouldSignalBatch() ||\n  ReactNativeFeatureFlags.cxxNativeAnimatedEnabled();\n\nfunction createNativeOperations(): $NonMaybeType<typeof NativeAnimatedModule> {\n  const methodNames = [\n    'createAnimatedNode', // 1\n    'updateAnimatedNodeConfig', // 2\n    'getValue', // 3\n    'startListeningToAnimatedNodeValue', // 4\n    'stopListeningToAnimatedNodeValue', // 5\n    'connectAnimatedNodes', // 6\n    'disconnectAnimatedNodes', // 7\n    'startAnimatingNode', // 8\n    'stopAnimation', // 9\n    'setAnimatedNodeValue', // 10\n    'setAnimatedNodeOffset', // 11\n    'flattenAnimatedNodeOffset', // 12\n    'extractAnimatedNodeOffset', // 13\n    'connectAnimatedNodeToView', // 14\n    'disconnectAnimatedNodeFromView', // 15\n    'restoreDefaultValues', // 16\n    'dropAnimatedNode', // 17\n    'addAnimatedEventToView', // 18\n    'removeAnimatedEventFromView', // 19\n    'addListener', // 20\n    'removeListener', // 21\n  ];\n  const nativeOperations: {\n    [$Values<typeof methodNames>]: (...$ReadOnlyArray<mixed>) => void,\n  } = {};\n  if (isSingleOpBatching) {\n    for (let ii = 0, length = methodNames.length; ii < length; ii++) {\n      const methodName = methodNames[ii];\n      const operationID = ii + 1;\n      nativeOperations[methodName] = (...args) => {\n        // `singleOpQueue` is a flat array of operation IDs and arguments, which\n        // is possible because # arguments is fixed for each operation. For more\n        // details, see `NativeAnimatedModule.queueAndExecuteBatchedOperations`.\n        singleOpQueue.push(operationID, ...args);\n        if (shouldSignalBatch) {\n          clearImmediate(flushQueueImmediate);\n          flushQueueImmediate = setImmediate(API.flushQueue);\n        }\n      };\n    }\n  } else {\n    for (let ii = 0, length = methodNames.length; ii < length; ii++) {\n      const methodName = methodNames[ii];\n      nativeOperations[methodName] = (...args) => {\n        /* $FlowFixMe[prop-missing] Natural Inference rollout. See\n         * https://fburl.com/workplace/6291gfvu */\n        const method = nullthrows(NativeAnimatedModule)[methodName];\n        // If queueing is explicitly on, *or* the queue has not yet\n        // been flushed, use the queue. This is to prevent operations\n        // from being executed out of order.\n        if (queueOperations || queue.length !== 0) {\n          // $FlowExpectedError[incompatible-call] - Dynamism.\n          queue.push(() => method(...args));\n        } else if (shouldSignalBatch) {\n          // $FlowExpectedError[incompatible-call] - Dynamism.\n          queue.push(() => method(...args));\n          clearImmediate(flushQueueImmediate);\n          flushQueueImmediate = setImmediate(API.flushQueue);\n        } else {\n          // $FlowExpectedError[incompatible-call] - Dynamism.\n          method(...args);\n        }\n      };\n    }\n  }\n  // $FlowExpectedError[incompatible-return] - Dynamism.\n  return nativeOperations;\n}\n\nconst NativeOperations = createNativeOperations();\n\n/**\n * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n * the native module methods, and automatic queue management on Android\n */\nconst API = {\n  getValue: (isSingleOpBatching\n    ? (tag, saveValueCallback) => {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        /* $FlowExpectedError[incompatible-call] - `saveValueCallback` is handled\n            differently when `isSingleOpBatching` is enabled. */\n        NativeOperations.getValue(tag);\n      }\n    : (tag, saveValueCallback) => {\n        NativeOperations.getValue(tag, saveValueCallback);\n      }) as $NonMaybeType<typeof NativeAnimatedModule>['getValue'],\n\n  setWaitingForIdentifier(id: string): void {\n    if (shouldSignalBatch) {\n      return;\n    }\n\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (\n      ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() &&\n      flushQueueImmediate\n    ) {\n      clearImmediate(flushQueueImmediate);\n    }\n  },\n\n  unsetWaitingForIdentifier(id: string): void {\n    if (shouldSignalBatch) {\n      return;\n    }\n\n    waitingForQueuedOperations.delete(id);\n\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n\n  disableQueue(): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      const prevImmediate = flushQueueImmediate;\n      clearImmediate(prevImmediate);\n      flushQueueImmediate = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n\n  flushQueue: (isSingleOpBatching\n    ? (): void => {\n        invariant(\n          NativeAnimatedModule,\n          'Native animated module is not available',\n        );\n        flushQueueImmediate = null;\n\n        if (singleOpQueue.length === 0) {\n          return;\n        }\n\n        // Set up event listener for callbacks if it's not set up\n        ensureGlobalEventEmitterListeners();\n\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);\n        singleOpQueue.length = 0;\n      }\n    : (): void => {\n        invariant(\n          NativeAnimatedModule,\n          'Native animated module is not available',\n        );\n        flushQueueImmediate = null;\n\n        if (queue.length === 0) {\n          return;\n        }\n\n        if (Platform.OS === 'android' || shouldSignalBatch) {\n          NativeAnimatedModule?.startOperationBatch?.();\n        }\n\n        for (let q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n\n        if (Platform.OS === 'android' || shouldSignalBatch) {\n          NativeAnimatedModule?.finishOperationBatch?.();\n        }\n      }) as () => void,\n\n  createAnimatedNode(tag: number, config: AnimatedNodeConfig): void {\n    NativeOperations.createAnimatedNode(tag, config);\n  },\n\n  updateAnimatedNodeConfig(tag: number, config: AnimatedNodeConfig): void {\n    NativeOperations.updateAnimatedNodeConfig?.(tag, config);\n  },\n\n  startListeningToAnimatedNodeValue(tag: number): void {\n    NativeOperations.startListeningToAnimatedNodeValue(tag);\n  },\n\n  stopListeningToAnimatedNodeValue(tag: number): void {\n    NativeOperations.stopListeningToAnimatedNodeValue(tag);\n  },\n\n  connectAnimatedNodes(parentTag: number, childTag: number): void {\n    NativeOperations.connectAnimatedNodes(parentTag, childTag);\n  },\n\n  disconnectAnimatedNodes(parentTag: number, childTag: number): void {\n    NativeOperations.disconnectAnimatedNodes(parentTag, childTag);\n  },\n\n  startAnimatingNode: (isSingleOpBatching\n    ? (animationId, nodeTag, config, endCallback) => {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        /* $FlowExpectedError[incompatible-call] - `endCallback` is handled\n            differently when `isSingleOpBatching` is enabled. */\n        NativeOperations.startAnimatingNode(animationId, nodeTag, config);\n      }\n    : (animationId, nodeTag, config, endCallback) => {\n        NativeOperations.startAnimatingNode(\n          animationId,\n          nodeTag,\n          config,\n          endCallback,\n        );\n      }) as $NonMaybeType<typeof NativeAnimatedModule>['startAnimatingNode'],\n\n  stopAnimation(animationId: number) {\n    NativeOperations.stopAnimation(animationId);\n  },\n\n  setAnimatedNodeValue(nodeTag: number, value: number): void {\n    NativeOperations.setAnimatedNodeValue(nodeTag, value);\n  },\n\n  setAnimatedNodeOffset(nodeTag: number, offset: number): void {\n    NativeOperations.setAnimatedNodeOffset(nodeTag, offset);\n  },\n\n  flattenAnimatedNodeOffset(nodeTag: number): void {\n    NativeOperations.flattenAnimatedNodeOffset(nodeTag);\n  },\n\n  extractAnimatedNodeOffset(nodeTag: number): void {\n    NativeOperations.extractAnimatedNodeOffset(nodeTag);\n  },\n\n  connectAnimatedNodeToView(nodeTag: number, viewTag: number): void {\n    NativeOperations.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n\n  disconnectAnimatedNodeFromView(nodeTag: number, viewTag: number): void {\n    NativeOperations.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n\n  restoreDefaultValues(nodeTag: number): void {\n    NativeOperations.restoreDefaultValues?.(nodeTag);\n  },\n\n  dropAnimatedNode(tag: number): void {\n    NativeOperations.dropAnimatedNode(tag);\n  },\n\n  addAnimatedEventToView(\n    viewTag: number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) {\n    NativeOperations.addAnimatedEventToView(viewTag, eventName, eventMapping);\n  },\n\n  removeAnimatedEventFromView(\n    viewTag: number,\n    eventName: string,\n    animatedNodeTag: number,\n  ) {\n    NativeOperations.removeAnimatedEventFromView(\n      viewTag,\n      eventName,\n      animatedNodeTag,\n    );\n  },\n};\n\nfunction ensureGlobalEventEmitterListeners() {\n  if (\n    globalEventEmitterGetValueListener &&\n    globalEventEmitterAnimationFinishedListener\n  ) {\n    return;\n  }\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener(\n    'onNativeAnimatedModuleGetValue',\n    params => {\n      const {tag} = params;\n      const callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    },\n  );\n  globalEventEmitterAnimationFinishedListener =\n    RCTDeviceEventEmitter.addListener(\n      'onNativeAnimatedModuleAnimationFinished',\n      params => {\n        // TODO: remove Array.isArray once native changes have propagated\n        const animations = Array.isArray(params) ? params : [params];\n        for (const animation of animations) {\n          const {animationId} = animation;\n          const callback = eventListenerAnimationFinishedCallbacks[animationId];\n          if (callback) {\n            callback(animation);\n            delete eventListenerAnimationFinishedCallbacks[animationId];\n          }\n        }\n      },\n    );\n}\n\nfunction generateNewNodeTag(): number {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId(): number {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule(): void {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nlet _warnedMissingNativeAnimated = false;\n\nfunction shouldUseNativeDriver(\n  config: $ReadOnly<{...AnimationConfig, ...}> | EventConfig<mixed>,\n): boolean {\n  if (config.useNativeDriver == null) {\n    console.warn(\n      'Animated: `useNativeDriver` was not specified. This is a required ' +\n        'option and must be explicitly set to `true` or `false`',\n    );\n  }\n\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn(\n          'Animated: `useNativeDriver` is not supported because the native ' +\n            'animated module is missing. Falling back to JS-based animation. To ' +\n            'resolve this, add `RCTAnimation` module to this app, or remove ' +\n            '`useNativeDriver`. ' +\n            'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md',\n        );\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value: number | string): number | string {\n  // Change the string type to number type so we can reuse the same logic in\n  // iOS and Android platform\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  // Normalize degrees and radians to a number expressed in radians\n  if (value.endsWith('deg')) {\n    const degrees = parseFloat(value) || 0;\n    return (degrees * Math.PI) / 180.0;\n  } else if (value.endsWith('rad')) {\n    return parseFloat(value) || 0;\n  } else {\n    return value;\n  }\n}\n\nexport default {\n  API,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  shouldSignalBatch,\n  transformDataType,\n  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\n  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\n  get nativeEventEmitter(): NativeEventEmitter {\n    if (!nativeEventEmitter) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      nativeEventEmitter = new NativeEventEmitter(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeAnimatedModule,\n      );\n    }\n    return nativeEventEmitter;\n  },\n};\n"],"mappings":"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","ignoreList":[]}