13a95fbe056d37847bddeb0999ce458c
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return {
    getItem: jest.fn(),
    setItem: jest.fn()
  };
});
_getJestObj().mock('../src/components/', function () {
  return {
    CameraComponent: function CameraComponent(_ref) {
      var onPhotoTaken = _ref.onPhotoTaken,
        onClose = _ref.onClose;
      onPhotoTaken('fake-uri', {
        latitude: 10,
        longitude: 20
      });
      onClose && onClose();
      return null;
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _native = require("@react-navigation/native");
var _react = _interopRequireDefault(require("react"));
var _Home = _interopRequireDefault(require("../src/screen/Home"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('HomeScreen', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('should render search input and camera button', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_native.NavigationContainer, {
        children: (0, _jsxRuntime.jsx)(_Home.default, {})
      })),
      getByPlaceholderText = _render.getByPlaceholderText,
      getByTestId = _render.getByTestId;
    expect(getByPlaceholderText('Buscar por data...')).toBeTruthy();
    expect(getByTestId('camera-button')).toBeTruthy();
  });
  it('should toggle dark mode', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_native.NavigationContainer, {
        children: (0, _jsxRuntime.jsx)(_Home.default, {})
      })),
      getByTestId = _render2.getByTestId;
    var themeButton = getByTestId('theme-button');
    _reactNative.fireEvent.press(themeButton);
    _reactNative.fireEvent.press(themeButton);
  });
  it('should open camera and handle photo taken', (0, _asyncToGenerator2.default)(function* () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_native.NavigationContainer, {
        children: (0, _jsxRuntime.jsx)(_Home.default, {})
      })),
      getByTestId = _render3.getByTestId;
    var cameraButton = getByTestId('camera-button');
    _reactNative.fireEvent.press(cameraButton);
    yield (0, _reactNative.waitFor)(function () {
      expect(_asyncStorage.default.setItem).toHaveBeenCalledTimes(1);
      expect(_asyncStorage.default.setItem).toHaveBeenCalledWith('@photos', expect.stringContaining('fake-uri'));
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRJdGVtIiwiamVzdCIsImZuIiwic2V0SXRlbSIsIkNhbWVyYUNvbXBvbmVudCIsIl9yZWYiLCJvblBob3RvVGFrZW4iLCJvbkNsb3NlIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWFjdE5hdGl2ZSIsIl9hc3luY1N0b3JhZ2UiLCJfbmF0aXZlIiwiX3JlYWN0IiwiX0hvbWUiLCJfanN4UnVudGltZSIsIl9yZXF1aXJlIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiY2xlYXJBbGxNb2NrcyIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsIk5hdmlnYXRpb25Db250YWluZXIiLCJjaGlsZHJlbiIsImRlZmF1bHQiLCJnZXRCeVBsYWNlaG9sZGVyVGV4dCIsImdldEJ5VGVzdElkIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwidGhlbWVCdXR0b24iLCJmaXJlRXZlbnQiLCJwcmVzcyIsIl9yZW5kZXIzIiwiY2FtZXJhQnV0dG9uIiwid2FpdEZvciIsIkFzeW5jU3RvcmFnZSIsInRvSGF2ZUJlZW5DYWxsZWRUaW1lcyIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwic3RyaW5nQ29udGFpbmluZyJdLCJzb3VyY2VzIjpbIkhvbWVTY3JlZW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBBc3luY1N0b3JhZ2UgZnJvbSAnQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlL2FzeW5jLXN0b3JhZ2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkNvbnRhaW5lciB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEhvbWVTY3JlZW4gZnJvbSAnLi4vc3JjL3NjcmVlbi9Ib21lJztcblxuLy8gTW9jayBkbyBBc3luY1N0b3JhZ2Vcbmplc3QubW9jaygnQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlL2FzeW5jLXN0b3JhZ2UnLCAoKSA9PiAoe1xuICBnZXRJdGVtOiBqZXN0LmZuKCksXG4gIHNldEl0ZW06IGplc3QuZm4oKSxcbn0pKTtcblxuLy8gTW9jayBkbyBDYW1lcmFDb21wb25lbnRcbmplc3QubW9jaygnLi4vc3JjL2NvbXBvbmVudHMvJywgKCkgPT4gKHtcbiAgQ2FtZXJhQ29tcG9uZW50OiAoeyBvblBob3RvVGFrZW4sIG9uQ2xvc2UgfTogYW55KSA9PiB7XG4gICAgLy8gRGlzcGFyYSBvblBob3RvVGFrZW4gaW1lZGlhdGFtZW50ZSBwYXJhIHRlc3RhciBhIGZ1bsOnw6NvXG4gICAgb25QaG90b1Rha2VuKCdmYWtlLXVyaScsIHsgbGF0aXR1ZGU6IDEwLCBsb25naXR1ZGU6IDIwIH0pO1xuICAgIG9uQ2xvc2UgJiYgb25DbG9zZSgpO1xuICAgIHJldHVybiBudWxsO1xuICB9LFxufSkpO1xuXG5kZXNjcmliZSgnSG9tZVNjcmVlbicsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgamVzdC5jbGVhckFsbE1vY2tzKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmVuZGVyIHNlYXJjaCBpbnB1dCBhbmQgY2FtZXJhIGJ1dHRvbicsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0LCBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPE5hdmlnYXRpb25Db250YWluZXI+XG4gICAgICAgIDxIb21lU2NyZWVuIC8+XG4gICAgICA8L05hdmlnYXRpb25Db250YWluZXI+LFxuICAgICk7XG5cbiAgICBleHBlY3QoZ2V0QnlQbGFjZWhvbGRlclRleHQoJ0J1c2NhciBwb3IgZGF0YS4uLicpKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdjYW1lcmEtYnV0dG9uJykpLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCB0b2dnbGUgZGFyayBtb2RlJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihcbiAgICAgIDxOYXZpZ2F0aW9uQ29udGFpbmVyPlxuICAgICAgICA8SG9tZVNjcmVlbiAvPlxuICAgICAgPC9OYXZpZ2F0aW9uQ29udGFpbmVyPixcbiAgICApO1xuXG4gICAgY29uc3QgdGhlbWVCdXR0b24gPSBnZXRCeVRlc3RJZCgndGhlbWUtYnV0dG9uJyk7XG5cbiAgICBmaXJlRXZlbnQucHJlc3ModGhlbWVCdXR0b24pO1xuICAgIGZpcmVFdmVudC5wcmVzcyh0aGVtZUJ1dHRvbik7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgb3BlbiBjYW1lcmEgYW5kIGhhbmRsZSBwaG90byB0YWtlbicsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8TmF2aWdhdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgPEhvbWVTY3JlZW4gLz5cbiAgICAgIDwvTmF2aWdhdGlvbkNvbnRhaW5lcj4sXG4gICAgKTtcblxuICAgIGNvbnN0IGNhbWVyYUJ1dHRvbiA9IGdldEJ5VGVzdElkKCdjYW1lcmEtYnV0dG9uJyk7XG5cbiAgICBmaXJlRXZlbnQucHJlc3MoY2FtZXJhQnV0dG9uKTtcblxuICAgIC8vIEVzcGVyYSBvIEFzeW5jU3RvcmFnZS5zZXRJdGVtIHNlciBjaGFtYWRvXG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3QoQXN5bmNTdG9yYWdlLnNldEl0ZW0pLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgICAgIGV4cGVjdChBc3luY1N0b3JhZ2Uuc2V0SXRlbSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoXG4gICAgICAgICdAcGhvdG9zJyxcbiAgICAgICAgZXhwZWN0LnN0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