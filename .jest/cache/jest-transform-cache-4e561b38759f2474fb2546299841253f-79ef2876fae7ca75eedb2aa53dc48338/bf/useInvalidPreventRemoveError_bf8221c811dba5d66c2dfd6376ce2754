10193e39cd16426f54067a2b1a6c976b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useInvalidPreventRemoveError = useInvalidPreventRemoveError;
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function useInvalidPreventRemoveError(descriptors) {
  var _preventedDescriptor$, _preventedDescriptor$2;
  var _usePreventRemoveCont = (0, _native.usePreventRemoveContext)(),
    preventedRoutes = _usePreventRemoveCont.preventedRoutes;
  var preventedRouteKey = Object.keys(preventedRoutes)[0];
  var preventedDescriptor = descriptors[preventedRouteKey];
  var isHeaderBackButtonMenuEnabledOnPreventedScreen = preventedDescriptor == null || (_preventedDescriptor$ = preventedDescriptor.options) == null ? void 0 : _preventedDescriptor$.headerBackButtonMenuEnabled;
  var preventedRouteName = preventedDescriptor == null || (_preventedDescriptor$2 = preventedDescriptor.route) == null ? void 0 : _preventedDescriptor$2.name;
  React.useEffect(function () {
    if (preventedRouteKey != null && isHeaderBackButtonMenuEnabledOnPreventedScreen) {
      var message = `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \n\n` + `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;
      console.error(message);
    }
  }, [preventedRouteKey, isHeaderBackButtonMenuEnabledOnPreventedScreen, preventedRouteName]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInVzZUludmFsaWRQcmV2ZW50UmVtb3ZlRXJyb3IiLCJkZXNjcmlwdG9ycyIsIl9wcmV2ZW50ZWREZXNjcmlwdG9yJCIsIl9wcmV2ZW50ZWREZXNjcmlwdG9yJDIiLCJfdXNlUHJldmVudFJlbW92ZUNvbnQiLCJ1c2VQcmV2ZW50UmVtb3ZlQ29udGV4dCIsInByZXZlbnRlZFJvdXRlcyIsInByZXZlbnRlZFJvdXRlS2V5Iiwia2V5cyIsInByZXZlbnRlZERlc2NyaXB0b3IiLCJpc0hlYWRlckJhY2tCdXR0b25NZW51RW5hYmxlZE9uUHJldmVudGVkU2NyZWVuIiwib3B0aW9ucyIsImhlYWRlckJhY2tCdXR0b25NZW51RW5hYmxlZCIsInByZXZlbnRlZFJvdXRlTmFtZSIsInJvdXRlIiwibmFtZSIsInVzZUVmZmVjdCIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZXJyb3IiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvdXNlSW52YWxpZFByZXZlbnRSZW1vdmVFcnJvci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUE4QixTQUFBRSx3QkFBQUMsQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUgsdUJBQUEsWUFBQUEsd0JBQUFDLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsY0FBQU0sRUFBQSxJQUFBZCxDQUFBLGdCQUFBYyxFQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsSUFBQUQsQ0FBQSxHQUFBVyxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbkIsQ0FBQSxFQUFBYyxFQUFBLE9BQUFQLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFNLEVBQUEsRUFBQVAsQ0FBQSxJQUFBQyxDQUFBLENBQUFNLEVBQUEsSUFBQWQsQ0FBQSxDQUFBYyxFQUFBLFdBQUFOLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBSXZCLFNBQVNtQiw0QkFBNEJBLENBQzFDQyxXQUFxQyxFQUNyQztFQUFBLElBQUFDLHFCQUFBLEVBQUFDLHNCQUFBO0VBQ0EsSUFBQUMscUJBQUEsR0FBNEIsSUFBQUMsK0JBQXVCLEVBQUMsQ0FBQztJQUE3Q0MsZUFBQSxHQUFBRixxQkFBQSxDQUFBRSxlQUFBO0VBQ1IsSUFBTUMsaUJBQWlCLEdBQUdWLE1BQU0sQ0FBQ1csSUFBSSxDQUFDRixlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDekQsSUFBTUcsbUJBQW1CLEdBQUdSLFdBQVcsQ0FBQ00saUJBQWlCLENBQUM7RUFDMUQsSUFBTUcsOENBQThDLEdBQ2xERCxtQkFBbUIsYUFBQVAscUJBQUEsR0FBbkJPLG1CQUFtQixDQUFFRSxPQUFPLHFCQUE1QlQscUJBQUEsQ0FBOEJVLDJCQUEyQjtFQUMzRCxJQUFNQyxrQkFBa0IsR0FBR0osbUJBQW1CLGFBQUFOLHNCQUFBLEdBQW5CTSxtQkFBbUIsQ0FBRUssS0FBSyxxQkFBMUJYLHNCQUFBLENBQTRCWSxJQUFJO0VBRTNEckMsS0FBSyxDQUFDc0MsU0FBUyxDQUFDLFlBQU07SUFDcEIsSUFDRVQsaUJBQWlCLElBQUksSUFBSSxJQUN6QkcsOENBQThDLEVBQzlDO01BQ0EsSUFBTU8sT0FBTyxHQUNYLGNBQWNKLGtCQUFrQiwyR0FBMkcsR0FDM0ksOERBQThEQSxrQkFBa0IsbUNBQW1DO01BQ3JISyxPQUFPLENBQUNDLEtBQUssQ0FBQ0YsT0FBTyxDQUFDO0lBQ3hCO0VBQ0YsQ0FBQyxFQUFFLENBQ0RWLGlCQUFpQixFQUNqQkcsOENBQThDLEVBQzlDRyxrQkFBa0IsQ0FDbkIsQ0FBQztBQUNKIiwiaWdub3JlTGlzdCI6W119