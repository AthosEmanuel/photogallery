8789adab5752367098597a9a8517c830
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return {
    getItem: jest.fn(),
    setItem: jest.fn()
  };
});
_getJestObj().mock('../src/components/', function () {
  return {
    CameraComponent: jest.fn(function () {
      return null;
    })
  };
});
_getJestObj().mock('react-native-vector-icons/Ionicons', function () {
  return 'Icon';
});
_getJestObj().mock('@react-navigation/native', function () {
  return Object.assign({}, jest.requireActual('@react-navigation/native'), {
    useNavigation: function useNavigation() {
      return {
        navigate: mockNavigate
      };
    }
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _react = _interopRequireDefault(require("react"));
var _components = require("../src/components/");
var _Home = _interopRequireDefault(require("../src/screen/Home"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockNavigate = jest.fn();
describe('HomeScreen', function () {
  beforeEach(function () {
    _asyncStorage.default.getItem.mockResolvedValue(null);
    mockNavigate.mockClear();
  });
  it('should render search input and camera button', (0, _asyncToGenerator2.default)(function* () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Home.default, {})),
      getByPlaceholderText = _render.getByPlaceholderText;
    expect(getByPlaceholderText('Buscar por data...')).toBeTruthy();
  }));
  it('should open camera when camera button is pressed', (0, _asyncToGenerator2.default)(function* () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Home.default, {})),
      getByTestId = _render2.getByTestId;
    var cameraButton = getByTestId('camera-button');
    _reactNative.fireEvent.press(cameraButton);
    yield (0, _reactNative.waitFor)(function () {
      expect(_components.CameraComponent).toHaveBeenCalled();
    });
  }));
  it('should toggle dark mode', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Home.default, {})),
      getByTestId = _render3.getByTestId;
    var themeButton = getByTestId('theme-button');
    _reactNative.fireEvent.press(themeButton);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRJdGVtIiwiamVzdCIsImZuIiwic2V0SXRlbSIsIkNhbWVyYUNvbXBvbmVudCIsIk9iamVjdCIsImFzc2lnbiIsInJlcXVpcmVBY3R1YWwiLCJ1c2VOYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJtb2NrTmF2aWdhdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWFjdE5hdGl2ZSIsIl9hc3luY1N0b3JhZ2UiLCJfcmVhY3QiLCJfY29tcG9uZW50cyIsIl9Ib21lIiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIkFzeW5jU3RvcmFnZSIsIm1vY2tSZXNvbHZlZFZhbHVlIiwibW9ja0NsZWFyIiwiaXQiLCJkZWZhdWx0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImdldEJ5UGxhY2Vob2xkZXJUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwiZ2V0QnlUZXN0SWQiLCJjYW1lcmFCdXR0b24iLCJmaXJlRXZlbnQiLCJwcmVzcyIsIndhaXRGb3IiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwiX3JlbmRlcjMiLCJ0aGVtZUJ1dHRvbiJdLCJzb3VyY2VzIjpbIkhvbWVTY3JlZW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBBc3luY1N0b3JhZ2UgZnJvbSAnQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlL2FzeW5jLXN0b3JhZ2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENhbWVyYUNvbXBvbmVudCB9IGZyb20gJy4uL3NyYy9jb21wb25lbnRzLyc7XG5pbXBvcnQgSG9tZVNjcmVlbiBmcm9tICcuLi9zcmMvc2NyZWVuL0hvbWUnOyAvLyBhanVzdGUgbyBwYXRoXG5cbi8vIE1vY2sgZG8gQXN5bmNTdG9yYWdlXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZS9hc3luYy1zdG9yYWdlJywgKCkgPT4gKHtcbiAgZ2V0SXRlbTogamVzdC5mbigpLFxuICBzZXRJdGVtOiBqZXN0LmZuKCksXG59KSk7XG5cbi8vIE1vY2sgZG8gQ2FtZXJhQ29tcG9uZW50XG5qZXN0Lm1vY2soJy4uL3NyYy9jb21wb25lbnRzLycsICgpID0+ICh7XG4gIENhbWVyYUNvbXBvbmVudDogamVzdC5mbigoKSA9PiBudWxsKSxcbn0pKTtcblxuLy8gTW9jayBkbyBJb25pY29uc1xuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0lvbmljb25zJywgKCkgPT4gJ0ljb24nKTtcblxuLy8gTW9jayBkbyB1c2VOYXZpZ2F0aW9uXG5jb25zdCBtb2NrTmF2aWdhdGUgPSBqZXN0LmZuKCk7XG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZScsICgpID0+ICh7XG4gIC4uLmplc3QucmVxdWlyZUFjdHVhbCgnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJyksXG4gIHVzZU5hdmlnYXRpb246ICgpID0+ICh7XG4gICAgbmF2aWdhdGU6IG1vY2tOYXZpZ2F0ZSxcbiAgfSksXG59KSk7XG5cbmRlc2NyaWJlKCdIb21lU2NyZWVuJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAoQXN5bmNTdG9yYWdlLmdldEl0ZW0gYXMgamVzdC5Nb2NrKS5tb2NrUmVzb2x2ZWRWYWx1ZShudWxsKTtcbiAgICBtb2NrTmF2aWdhdGUubW9ja0NsZWFyKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmVuZGVyIHNlYXJjaCBpbnB1dCBhbmQgY2FtZXJhIGJ1dHRvbicsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5UGxhY2Vob2xkZXJUZXh0IH0gPSByZW5kZXIoPEhvbWVTY3JlZW4gLz4pO1xuXG4gICAgZXhwZWN0KGdldEJ5UGxhY2Vob2xkZXJUZXh0KCdCdXNjYXIgcG9yIGRhdGEuLi4nKSkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIG9wZW4gY2FtZXJhIHdoZW4gY2FtZXJhIGJ1dHRvbiBpcyBwcmVzc2VkJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8SG9tZVNjcmVlbiAvPik7XG5cbiAgICBjb25zdCBjYW1lcmFCdXR0b24gPSBnZXRCeVRlc3RJZCgnY2FtZXJhLWJ1dHRvbicpO1xuICAgIGZpcmVFdmVudC5wcmVzcyhjYW1lcmFCdXR0b24pO1xuXG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3QoQ2FtZXJhQ29tcG9uZW50KS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgdG9nZ2xlIGRhcmsgbW9kZScsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoPEhvbWVTY3JlZW4gLz4pO1xuXG4gICAgY29uc3QgdGhlbWVCdXR0b24gPSBnZXRCeVRlc3RJZCgndGhlbWUtYnV0dG9uJyk7XG4gICAgZmlyZUV2ZW50LnByZXNzKHRoZW1lQnV0dG9uKTtcblxuICAgIC8vIE7Do28gcHJlY2lzYSBkZSBhc3NlcnQgZXhwbMOtY2l0byBhcXVpLCBtYXMgdm9jw6ogcG9kZXJpYSB0ZXN0YXIgbXVkYW7Dp2EgZGUgZXN0aWxvIHNlIHF1aXNlclxuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFRQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsMkNBQTJDLEVBQUU7RUFBQSxPQUFPO0lBQzVEQyxPQUFPLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7SUFDbEJDLE9BQU8sRUFBRUYsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFDbkIsQ0FBQztBQUFBLENBQUMsQ0FBQztBQUdISixXQUFBLEdBQUtDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtFQUFBLE9BQU87SUFDckNLLGVBQWUsRUFBRUgsSUFBSSxDQUFDQyxFQUFFLENBQUM7TUFBQSxPQUFNLElBQUk7SUFBQTtFQUNyQyxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBR0hKLFdBQUEsR0FBS0MsSUFBSSxDQUFDLG9DQUFvQyxFQUFFO0VBQUEsT0FBTSxNQUFNO0FBQUEsRUFBQztBQUk3REQsV0FBQSxHQUFLQyxJQUFJLENBQUMsMEJBQTBCLEVBQUU7RUFBQSxPQUFBTSxNQUFBLENBQUFDLE1BQUEsS0FDakNMLElBQUksQ0FBQ00sYUFBYSxDQUFDLDBCQUEwQixDQUFDO0lBQ2pEQyxhQUFhLEVBQUUsU0FBZkEsYUFBYUEsQ0FBQTtNQUFBLE9BQVM7UUFDcEJDLFFBQVEsRUFBRUM7TUFDWixDQUFDO0lBQUE7RUFBQztBQUFBLENBQ0YsQ0FBQztBQUFDLElBQUFDLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxrQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBNUJKLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUVBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUNBLElBQUFNLEtBQUEsR0FBQVAsc0JBQUEsQ0FBQUMsT0FBQTtBQUE0QyxJQUFBTyxXQUFBLEdBQUFQLE9BQUE7QUFBQSxTQUFBZCxZQUFBO0VBQUEsSUFBQXNCLFFBQUEsR0FBQVIsT0FBQTtJQUFBWCxJQUFBLEdBQUFtQixRQUFBLENBQUFuQixJQUFBO0VBQUFILFdBQUEsWUFBQUEsWUFBQTtJQUFBLE9BQUFHLElBQUE7RUFBQTtFQUFBLE9BQUFBLElBQUE7QUFBQTtBQWlCNUMsSUFBTVMsWUFBWSxHQUFHVCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0FBUTlCbUIsUUFBUSxDQUFDLFlBQVksRUFBRSxZQUFNO0VBQzNCQyxVQUFVLENBQUMsWUFBTTtJQUNkQyxxQkFBWSxDQUFDdkIsT0FBTyxDQUFld0IsaUJBQWlCLENBQUMsSUFBSSxDQUFDO0lBQzNEZCxZQUFZLENBQUNlLFNBQVMsQ0FBQyxDQUFDO0VBQzFCLENBQUMsQ0FBQztFQUVGQyxFQUFFLENBQUMsOENBQThDLE1BQUFiLGtCQUFBLENBQUFjLE9BQUEsRUFBRSxhQUFZO0lBQzdELElBQUFDLE9BQUEsR0FBaUMsSUFBQUMsbUJBQU0sRUFBQyxJQUFBVixXQUFBLENBQUFXLEdBQUEsRUFBQ1osS0FBQSxDQUFBUyxPQUFVLElBQUUsQ0FBQyxDQUFDO01BQS9DSSxvQkFBb0IsR0FBQUgsT0FBQSxDQUFwQkcsb0JBQW9CO0lBRTVCQyxNQUFNLENBQUNELG9CQUFvQixDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQ0UsVUFBVSxDQUFDLENBQUM7RUFDakUsQ0FBQyxFQUFDO0VBRUZQLEVBQUUsQ0FBQyxrREFBa0QsTUFBQWIsa0JBQUEsQ0FBQWMsT0FBQSxFQUFFLGFBQVk7SUFDakUsSUFBQU8sUUFBQSxHQUF3QixJQUFBTCxtQkFBTSxFQUFDLElBQUFWLFdBQUEsQ0FBQVcsR0FBQSxFQUFDWixLQUFBLENBQUFTLE9BQVUsSUFBRSxDQUFDLENBQUM7TUFBdENRLFdBQVcsR0FBQUQsUUFBQSxDQUFYQyxXQUFXO0lBRW5CLElBQU1DLFlBQVksR0FBR0QsV0FBVyxDQUFDLGVBQWUsQ0FBQztJQUNqREUsc0JBQVMsQ0FBQ0MsS0FBSyxDQUFDRixZQUFZLENBQUM7SUFFN0IsTUFBTSxJQUFBRyxvQkFBTyxFQUFDLFlBQU07TUFDbEJQLE1BQU0sQ0FBQzVCLDJCQUFlLENBQUMsQ0FBQ29DLGdCQUFnQixDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxFQUFDO0VBRUZkLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxZQUFNO0lBQ2xDLElBQUFlLFFBQUEsR0FBd0IsSUFBQVosbUJBQU0sRUFBQyxJQUFBVixXQUFBLENBQUFXLEdBQUEsRUFBQ1osS0FBQSxDQUFBUyxPQUFVLElBQUUsQ0FBQyxDQUFDO01BQXRDUSxXQUFXLEdBQUFNLFFBQUEsQ0FBWE4sV0FBVztJQUVuQixJQUFNTyxXQUFXLEdBQUdQLFdBQVcsQ0FBQyxjQUFjLENBQUM7SUFDL0NFLHNCQUFTLENBQUNDLEtBQUssQ0FBQ0ksV0FBVyxDQUFDO0VBRzlCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==